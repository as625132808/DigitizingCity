{"version":3,"sources":["webpack:///./src/assets/js/Export2Excel.js"],"names":["sheet_from_array_of_arrays","data","opts","v","ws","range","s","c","r","e","R","length","C","cell","cell_ref","XLSX","utils","encode_cell","t","Date","z","SSF","_table","datenum","parse","UTC","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","id","theTable","document","getElementById","oo","table","out","rows","querySelectorAll","ranges","outRow","row","columns","colspan","getAttribute","rowspan","cellValue","innerText","forEach","push","k","generateArray","wb","wbout","write","bookType","bookSST","type","saveAs","Blob","__webpack_exports__","th","jsonData","defaultTitle","unshift","title","__webpack_require__"],"mappings":"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","file":"static/js/3.2dd124d46aeac9904c69.js","sourcesContent":["/* eslint-disable */\r\nrequire('script-loader!file-saver');\r\nrequire('script-loader!assets/js/Blob');\r\nrequire('script-loader!xlsx/dist/xlsx.core.min');\r\n\r\nfunction generateArray(table) {\r\n  var out = [];\r\n  var rows = table.querySelectorAll('tr');\r\n  var ranges = [];\r\n  for (var R = 0; R < rows.length; ++R) {\r\n    var outRow = [];\r\n    var row = rows[R];\r\n    var columns = row.querySelectorAll('td');\r\n    for (var C = 0; C < columns.length; ++C) {\r\n      var cell = columns[C];\r\n      var colspan = cell.getAttribute('colspan');\r\n      var rowspan = cell.getAttribute('rowspan');\r\n      var cellValue = cell.innerText;\r\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\r\n\r\n      //Skip ranges\r\n      ranges.forEach(function (range) {\r\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\r\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\r\n        }\r\n      });\r\n\r\n      //Handle Row Span\r\n      if (rowspan || colspan) {\r\n        rowspan = rowspan || 1;\r\n        colspan = colspan || 1;\r\n        ranges.push({s: {r: R, c: outRow.length}, e: {r: R + rowspan - 1, c: outRow.length + colspan - 1}});\r\n      }\r\n      ;\r\n\r\n      //Handle Value\r\n      outRow.push(cellValue !== \"\" ? cellValue : null);\r\n\r\n      //Handle Colspan\r\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\r\n    }\r\n    out.push(outRow);\r\n  }\r\n  return [out, ranges];\r\n};\r\n\r\nfunction datenum(v, date1904) {\r\n  if (date1904) v += 1462;\r\n  var epoch = Date.parse(v);\r\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data, opts) {\r\n  var ws = {};\r\n  var range = {s: {c: 10000000, r: 10000000}, e: {c: 0, r: 0}};\r\n  for (var R = 0; R != data.length; ++R) {\r\n    for (var C = 0; C != data[R].length; ++C) {\r\n      if (range.s.r > R) range.s.r = R;\r\n      if (range.s.c > C) range.s.c = C;\r\n      if (range.e.r < R) range.e.r = R;\r\n      if (range.e.c < C) range.e.c = C;\r\n      var cell = {v: data[R][C]};\r\n      if (cell.v == null) continue;\r\n      var cell_ref = XLSX.utils.encode_cell({c: C, r: R});\r\n\r\n      if (typeof cell.v === 'number') cell.t = 'n';\r\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\r\n      else if (cell.v instanceof Date) {\r\n        cell.t = 'n';\r\n        cell.z = XLSX.SSF._table[14];\r\n        cell.v = datenum(cell.v);\r\n      }\r\n      else cell.t = 's';\r\n\r\n      ws[cell_ref] = cell;\r\n    }\r\n  }\r\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\r\n  return ws;\r\n}\r\n\r\nfunction Workbook() {\r\n  if (!(this instanceof Workbook)) return new Workbook();\r\n  this.SheetNames = [];\r\n  this.Sheets = {};\r\n}\r\n\r\nfunction s2ab(s) {\r\n  var buf = new ArrayBuffer(s.length);\r\n  var view = new Uint8Array(buf);\r\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n  return buf;\r\n}\r\n\r\nexport function export_table_to_excel(id) {\r\n  var theTable = document.getElementById(id);\r\n  console.log('a')\r\n  var oo = generateArray(theTable);\r\n  var ranges = oo[1];\r\n\r\n  /* original data */\r\n  var data = oo[0];\r\n  var ws_name = \"SheetJS\";\r\n  console.log(data);\r\n\r\n  var wb = new Workbook(), ws = sheet_from_array_of_arrays(data);\r\n\r\n  /* add ranges to worksheet */\r\n  // ws['!cols'] = ['apple', 'banan'];\r\n  ws['!merges'] = ranges;\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {bookType: 'xlsx', bookSST: false, type: 'binary'});\r\n\r\n  saveAs(new Blob([s2ab(wbout)], {type: \"application/octet-stream\"}), \"test.xlsx\")\r\n}\r\n\r\nfunction formatJson(jsonData) {\r\n  console.log(jsonData)\r\n}\r\n\r\nexport function export_json_to_excel(th, jsonData, defaultTitle) {\r\n\r\n  /* original data */\r\n\r\n  var data = jsonData;\r\n  data.unshift(th);\r\n  var ws_name = \"SheetJS\";\r\n\r\n  var wb = new Workbook(), ws = sheet_from_array_of_arrays(data);\r\n\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {bookType: 'xlsx', bookSST: false, type: 'binary'});\r\n  var title = defaultTitle || '列表'\r\n  saveAs(new Blob([s2ab(wbout)], {type: \"application/octet-stream\"}), title + \".xlsx\")\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/Export2Excel.js"],"sourceRoot":""}